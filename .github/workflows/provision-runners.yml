name: Create and register self-hosted runners

on:
  workflow_dispatch:
    inputs:
      useJobs:
        description: Use Container Apps jobs instead of Container Apps
        type: boolean
        default: true
        required: true
      runnerLabels:
        description: Optional, comma separated list of labels to add to the runner. These labels are referenced in the 'runs-on' section of the workflow file
        type: string
        default: ''
        required: false
      keyVaultUrl:
        description: The URL of the Key Vault containing the GitHub App private key
        type: string
        default: ''
        required: false

permissions:
  id-token: write
  contents: read

defaults:
  run:
    working-directory: infra
    
jobs:
  provision-runners:
    runs-on: ubuntu-latest
    env:
      ARM_CLIENT_ID: ${{ vars.AZURE_CLIENT_ID }}
      ARM_SUBSCRIPTION_ID: ${{ vars.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ vars.AZURE_TENANT_ID }}
      ARM_USE_OIDC: true

    steps:
      - uses: actions/checkout@v3

      - name: Install jwt-cli
        run: |
          latest_version=$(curl -s https://api.github.com/repos/mike-engel/jwt-cli/releases/latest | grep tag_name | cut -d '"' -f 4) && \
          curl -L -o jwt-cli https://github.com/mike-engel/jwt-cli/releases/download/$latest_version/jwt-linux.tar.gz && \
          tar -xvf jwt-cli && \
          mv jwt /usr/local/bin/jwt && \
          chmod +x /usr/local/bin/jwt

      - name: Generate access token
        id: generate-access-token
        run: |
          echo "${{ secrets.GH_APP_PRIVATE_KEY }}" > /tmp/private-key.pem
          gh_app_token=$(jwt encode --exp=$(($(date +%s)+600)) --alg RS256 --iss ${{ vars.GH_APP_ID }} --secret @/tmp/private-key.pem)
          rm /tmp/private-key.pem

          curl --fail --verbose -X GET \
              -H "Authorization: Bearer $gh_app_token" \
              -H "Accept: application/vnd.github+json" \
              -H "X-GitHub-Api-Version: 2022-11-28" \
              "https://api.github.com/orgs/${{ github.repository_owner }}/installation" #debug

          installation_id=$(curl --fail -X GET \
              -H "Authorization: Bearer $gh_app_token" \
              -H "Accept: application/vnd.github+json" \
              -H "X-GitHub-Api-Version: 2022-11-28" \
              "https://api.github.com/orgs/${{ github.repository_owner }}/installation" | jq .[0].id)
          
          # if the installation id length is <1, then we exit
          if [ ${#installation_id} -lt 1 ]; then
            echo "Failed to get installation id"
            exit 1
          fi
            
          echo installation_id=$installation_id >> $GITHUB_OUTPUT

          # get access token for installation
          installation_access_token=$(curl --fail -X POST \
              -H "Authorization: Bearer ${gh_app_token}" \
              -H "Accept: application/vnd.github+json" \
              -H "X-GitHub-Api-Version: 2022-11-28" \
              "https://api.github.com/app/installations/${installation_id}/access_tokens" | jq .token --raw-output)
          
          echo token=$installation_access_token >> $GITHUB_OUTPUT


      - name: Get GH App installation ID
        id: get-installation-id
        run: |
          installation_id=$(curl --fail -X GET \
              -H "Authorization: Bearer ${{ steps.generate-access-token.outputs.token }}" \
              -H "Accept: application/vnd.github+json" \
              -H "X-GitHub-Api-Version: 2022-11-28" \
              "https://api.github.com/orgs/${{ github.repository_owner }}/installation" | jq .[0].id)
          
          # if the installation id length is <1, then we exit
          if [ ${#installation_id} -lt 1 ]; then
            echo "Failed to get installation id"
            exit 1
          fi
            
          echo installation_id=$installation_id >> $GITHUB_ENV

      - name: Azure Login
        uses: azure/login@v1
        with:
          client-id: ${{ vars.AZURE_CLIENT_ID }}
          tenant-id: ${{ vars.AZURE_TENANT_ID }}
          subscription-id: ${{ vars.AZURE_SUBSCRIPTION_ID }}

      - name: Bicep deploy
        uses: azure/arm-deploy@v1
        with:
          scope: resourcegroup
          resourceGroupName: ${{ vars.RG_NAME }}
          template: ./infra/02-app/main.bicep
          parameters: >
            project=${{ vars.PROJECT }} 
            acrName=${{ vars.ACR_NAME }} 
            acaEnvName=${{ vars.ACA_ENV_NAME }} 
            imageTag=from-base
            gitHubAccessToken=${{ steps.generate-access-token.outputs.token }} 
            gitHubOrganization=${{ github.repository_owner }} 
            useJobs=${{ inputs.useJobs }}
            runnerLabels=${{ inputs.runnerLabels }}
            gitHubAppId=${{ vars.GH_APP_ID }}
            gitHubAppInstallationId=${{ steps.generate-access-token.outputs.installation_id }} 
            keyVaultUrl=${{ inputs.keyVaultUrl }}
          deploymentName: deploy-aca-gh-runners-app
